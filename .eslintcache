[{"C:\\Users\\Brandon\\Desktop\\covid\\src\\index.js":"1","C:\\Users\\Brandon\\Desktop\\covid\\src\\App.js":"2","C:\\Users\\Brandon\\Desktop\\covid\\src\\reportWebVitals.js":"3","C:\\Users\\Brandon\\Desktop\\covid\\src\\components\\Graph.js":"4","C:\\Users\\Brandon\\Desktop\\covid\\src\\components\\Overview.js":"5","C:\\Users\\Brandon\\Desktop\\covid\\src\\components\\CountryDeaths.js":"6","C:\\Users\\Brandon\\Desktop\\covid\\src\\components\\RecoveredCountries.js":"7","C:\\Users\\Brandon\\Desktop\\covid\\src\\components\\Countries.js":"8","C:\\Users\\Brandon\\Desktop\\covid\\src\\components\\ActiveCountries.js":"9","C:\\Users\\Brandon\\Desktop\\covid\\src\\components\\dailyChart.js":"10","C:\\Users\\Brandon\\Desktop\\covid\\src\\components\\YesterdayChart.js":"11","C:\\Users\\Brandon\\Desktop\\covid\\src\\components\\IncreaseChart.js":"12","C:\\Users\\Brandon\\Desktop\\covid\\src\\components\\DailyChart.js":"13","C:\\Users\\Brandon\\Desktop\\covid\\src\\components\\Map.js":"14"},{"size":601,"mtime":1607018810968,"results":"15","hashOfConfig":"16"},{"size":314,"mtime":1607018557699,"results":"17","hashOfConfig":"16"},{"size":362,"mtime":499162500000,"results":"18","hashOfConfig":"16"},{"size":4840,"mtime":1608333509992,"results":"19","hashOfConfig":"16"},{"size":6136,"mtime":1608358671412,"results":"20","hashOfConfig":"16"},{"size":1300,"mtime":1608333818338,"results":"21","hashOfConfig":"16"},{"size":1273,"mtime":1608333840098,"results":"22","hashOfConfig":"16"},{"size":1101,"mtime":1608333871512,"results":"23","hashOfConfig":"16"},{"size":1266,"mtime":1608333888781,"results":"24","hashOfConfig":"16"},{"size":1818,"mtime":1608334046009,"results":"25","hashOfConfig":"16"},{"size":3425,"mtime":1608332126295,"results":"26","hashOfConfig":"16"},{"size":2950,"mtime":1608321408812,"results":"27","hashOfConfig":"16"},{"size":1818,"mtime":1608334046009,"results":"28","hashOfConfig":"16"},{"size":1689,"mtime":1608416255891,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"33"},"76j4fk",{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"33"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"33"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"33"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"33"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"33"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"33"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Brandon\\Desktop\\covid\\src\\index.js",["66"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport Graph from './components/Graph'\nimport Overview from './components/Overview'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n    <Overview />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["67","68"],"C:\\Users\\Brandon\\Desktop\\covid\\src\\App.js",[],"C:\\Users\\Brandon\\Desktop\\covid\\src\\reportWebVitals.js",[],"C:\\Users\\Brandon\\Desktop\\covid\\src\\components\\Graph.js",["69"],"import React, { Component } from 'react'\r\nimport axios from 'axios'\r\n//npm install --save react-chartjs-2 chart.js\r\nimport { Line } from 'react-chartjs-2'\r\n\r\n\r\n\r\nexport class Graph extends Component {\r\n    \r\n    /*state = {\r\n        keys: [],\r\n        values: [],\r\n        keysR: [],\r\n        valsR: [],\r\n        country: \"\",\r\n        history: [],\r\n        myData: []\r\n       \r\n    }*/\r\n    \r\n    /*updateMe(country){\r\n        let keys = [], values = [], keysR=[], valsR=[]\r\n\r\n        console.log(\"updateme()\")\r\n        console.log(this.props.myCountry)\r\n\r\n        if(country === ''){\r\n            axios.get(\"https://disease.sh/v3/covid-19/historical/all?lastdays=all\")\r\n            .then(res => { \r\n                \r\n                \r\n                for(const key in res.data.cases){\r\n                    keys.push(key)\r\n                    values.push(res.data.cases[key])\r\n                }\r\n\r\n                \r\n                this.setState({keys: keys, vals: values, country: this.props.myCountry, history: res.data})\r\n                 \r\n            }) \r\n        \r\n        } else {\r\n            axios.get(`https://disease.sh/v3/covid-19/historical/${country}?lastdays=all`)\r\n            .then(res => { \r\n                this.setState({country: this.props.myCountry, history: res.data})\r\n              \r\n            }) \r\n        }\r\n      \r\n    }*/\r\n    \r\n\r\n    /*componentDidMount(){\r\n\r\n        if(this.props.myCountry === ''){\r\n            axios.get(\"https://disease.sh/v3/covid-19/historical/all?lastdays=all\")\r\n            .then(res => { \r\n                this.setState({country: this.props.myCountry, history: res.data})\r\n            }) \r\n\r\n        } else {\r\n            axios.get(`https://disease.sh/v3/covid-19/historical/${this.props.myCountry}?lastdays=all`)\r\n            .then(res => { \r\n                 this.setState({country: this.props.myCountry, history: res.data})\r\n                 \r\n            }) \r\n        }\r\n    }*/\r\n \r\n    render() {\r\n       \r\n        /*if(this.props.myCountry !== this.state.country) {\r\n            this.updateMe(this.props.myCountry)\r\n        }*/\r\n            return (\r\n                <div style = {{background: \"#bbb\", borderRadius: \"2%\", padding: \"10px\", width: \"100%\", margin: \"0px 20px\"}}>\r\n                <div style={{display: \"flex\", flexDirection: \"column\", justifyItems: \"center\", alignItems: \"center\", width: \"100%\"}}>\r\n\r\n                    <select name=\"countrySelect\" id=\"countrySelect\" onChange={(e) => {\r\n                        this.props.handleCountryChange(e.target.value)\r\n                        //this.updateMe(e.target.value)  \r\n                    }          \r\n                    }>\r\n\r\n                    <option key=\"\" value =\"\" >Worldwide</option>\r\n                        {this.props.countries.map((data) => (\r\n                            <option key={data.country} value={data.country}>{data.country}</option>\r\n                        ))}\r\n                    </select>\r\n                    <div key=\"map\" style ={{width: \"85%\"}}>\r\n                        <Line \r\n                            options={{\r\n                                title : {\r\n                                    display: true,\r\n                                    text: this.props.myCountry === \"\" ? \"Worldwide\" : this.props.myCountry,\r\n                                    fontSize: 20,\r\n                                    fontColor: \"black\"\r\n                                }\r\n                            }} \r\n                            data= {{\r\n                            labels: this.props.history.cases ? Object.keys(this.props.history.cases): [\"\"],\r\n                            datasets: [{\r\n                                data: this.props.history.cases ? Object.values(this.props.history.cases) : [0],\r\n                                label: \"Infected\",\r\n                                fill: false,\r\n                                borderColor: \"#F00\",\r\n                                backgroundColor: \"#F00\"\r\n                            }, {\r\n                                data: this.props.history.recovered ? Object.values(this.props.history.recovered) : [0],\r\n                                label: \"Recovered\", \r\n                                fill: false,\r\n                                borderColor: \"green\"\r\n                            },{\r\n                                data: this.props.history.deaths ? Object.values(this.props.history.deaths) : [0],\r\n                                label: \"Deaths\",\r\n                                fill: false, \r\n                                borderColor: \"black\"\r\n                            }\r\n                            ], \r\n                            \r\n                        }}/>\r\n                    </div>\r\n                </div>\r\n                </div>\r\n            )\r\n        \r\n    }\r\n}\r\n\r\n\r\n\r\nexport default Graph\r\n","C:\\Users\\Brandon\\Desktop\\covid\\src\\components\\Overview.js",["70"],"import React, { Component } from 'react'\r\nimport axios from 'axios';\r\nimport { findByLabelText } from '@testing-library/react';\r\nimport Countries from './Countries'\r\nimport CountryDeaths from './CountryDeaths'\r\nimport RecoveredCountries from './RecoveredCountries'\r\nimport ActiveCountries from './ActiveCountries'\r\nimport Graph from './Graph'\r\nimport CountUp from 'react-countup'\r\nimport DailyChart from './DailyChart'\r\nimport YesterdayChart from './YesterdayChart';\r\nimport IncreaseChart from './IncreaseChart'\r\nimport Map from './Map'\r\n\r\n\r\n\r\n\r\nexport class Overview extends Component {\r\n\r\n    state = {\r\n        data: [],\r\n        usData: [],\r\n        sorted: [],\r\n        countries: [],\r\n        history: [],\r\n        country: '',\r\n        countryInfo: []\r\n    }\r\n\r\n    componentDidMount(){\r\n        axios.get('https://disease.sh/v3/covid-19/all')\r\n            .then(res => this.setState({ data: res.data}))\r\n        axios.get('https://disease.sh/v3/covid-19/countries/United%20States?strict=true')\r\n            .then(res => this.setState({usData: res.data }))\r\n        axios.get('https://disease.sh/v3/covid-19/countries?sort=cases')\r\n            .then(res => this.setState({sorted: res.data }))\r\n        axios.get('https://disease.sh/v3/covid-19/countries')\r\n            .then(res => this.setState({countries: res.data }))\r\n        axios.get('https://disease.sh/v3/covid-19/historical/all?lastdays=all')\r\n            .then(res => this.setState({history: res.data }))\r\n            \r\n        \r\n      }\r\n\r\n      getCountryInfo = () => {\r\n          \r\n        const countryInfo = this.state.countries.map(({countryInfo}) => countryInfo)\r\n        this.setState({countryInfo: countryInfo})\r\n        //console.log(this.state.countryInfo)\r\n      }\r\n\r\n      getCountryHistory = (country) => {\r\n          if(country !== \"\"){\r\n            axios.get(`https://disease.sh/v3/covid-19/historical/${country}?lastdays=all`)\r\n            .then(res => this.setState({history: res.data.timeline }))  \r\n          } else {\r\n            axios.get('https://disease.sh/v3/covid-19/historical/all?lastdays=all')\r\n            .then(res => this.setState({history: res.data }))\r\n          }\r\n        }\r\n    \r\n    \r\n      handleCountryChange = (country) =>{\r\n        console.log(country)\r\n        this.getCountryHistory(country)\r\n        this.setState({country: country})\r\n      }\r\n\r\n    render() {\r\n        //console.log(this.state.countries)\r\n        return (\r\n            <div style={{margin: \"0px 25px\", marginBottom: \"15px\"}}>\r\n            <h1 style={{textAlign:'center',marginTop:'20px'}}>Worldwide Statistics</h1>\r\n            \r\n            <div style ={{display:\"flex\", alignItems: \"center\"}}>\r\n                <DailyChart />\r\n                <div>\r\n                    <div style={{display: 'flex',justifyContent:'center'}}>\r\n                        <div style={div1}>\r\n                            <h2>Active Cases</h2>\r\n                            <h2><CountUp start={0} end={(parseInt(this.state.data.cases)) || 0} separator=\",\"  /></h2>\r\n                        </div>\r\n                        <div style={div1}>\r\n                            <h2>Total Deaths</h2>\r\n                            <h2><CountUp start={0} end={parseInt(this.state.data.deaths) || 0} separator=\",\" /></h2>\r\n                        </div>\r\n                        <div style={div1}>\r\n                            <h2>Total Recovered</h2>\r\n                            <h2><CountUp start={0} end={parseInt(this.state.data.recovered) || 0} separator=\",\" /></h2>\r\n                        </div>\r\n                    </div>\r\n                    <h1 style={{textAlign:'center',marginTop:'20px'}}> U.S. Statistics</h1>\r\n\r\n                        <div style={{display: 'flex',justifyContent:'spaceBetween'}}>\r\n                        \r\n                            <div style={div1}>\r\n                                <h2>Active Cases</h2>\r\n                                <h2><CountUp start={0} end={parseInt(this.state.usData.active) || 0} separator=\",\"/></h2>\r\n                            </div>\r\n                            <div style={div1}>\r\n                                <h2>Total Deaths</h2>\r\n                                <h2><CountUp start={0} end={parseInt(this.state.usData.deaths) || 0} separator=\",\" /></h2>\r\n                            </div>\r\n\r\n                            <div style={div1}>\r\n                                <h2>Total Recovered</h2>\r\n                                <h2><CountUp start={0} end={parseInt(this.state.usData.recovered) || 0} separator=\",\" /></h2>\r\n                            </div>\r\n                            \r\n                        </div>\r\n                    </div>\r\n                    <IncreaseChart />\r\n                </div>\r\n                \r\n               \r\n                <div key=\"div2\" style = {{display: 'flex', justifyContent: 'space-between'}}>\r\n                <Countries sorted={this.state.sorted} handleCountryChange={this.handleCountryChange}/>\r\n\r\n                <Graph countries={this.state.countries} handleCountryChange={this.handleCountryChange} \r\n                myCountry={this.state.country} \r\n                getCountryData={this.getCountryHistory} history={this.state.history}/>\r\n\r\n                <CountryDeaths handleCountryChange={this.handleCountryChange} />\r\n                </div>\r\n\r\n                <div style = {{display: 'flex', justifyContent: 'space-between'}}>\r\n                    <RecoveredCountries />\r\n                    {console.log(this.state.countryInfo)}\r\n                    <Map  countries={this.state.countries} getCountryInfo={this.getCountryInfo} countryInfo={this.state.countryInfo}/>\r\n                    <ActiveCountries /> \r\n                </div>\r\n               \r\n           \r\n            <div style={{width:\"100%\"}}>\r\n                <YesterdayChart />\r\n            </div>\r\n            \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst div1 = {\r\n    height: '100px',\r\n    width: '200px',\r\n    background: '#bbb',\r\n    padding: '10px',\r\n    margin: '25px',\r\n    textAlign: 'center',\r\n    lineHeight: '250%',\r\n    borderRadius:'2%'\r\n    \r\n}\r\n\r\nexport default Overview\r\n","C:\\Users\\Brandon\\Desktop\\covid\\src\\components\\CountryDeaths.js",[],"C:\\Users\\Brandon\\Desktop\\covid\\src\\components\\RecoveredCountries.js",[],"C:\\Users\\Brandon\\Desktop\\covid\\src\\components\\Countries.js",["71"],"import React, { Component } from 'react'\r\nimport axios from 'axios';\r\n\r\nexport class Countries extends Component {\r\n    \r\n    render() {\r\n        return (\r\n            <div >\r\n            <div style = {{background: \"#bbb\", borderRadius: \"2%\", padding: \"10px\"}}>\r\n                <h2 style={{marginBottom:'10px', textAlign: \"center\"}}>Countries by Cases</h2>\r\n                        <div style= {{height:'250px', overflow:'auto',width: '260px' }} >\r\n                            \r\n                             {this.props.sorted.map((data, i) => (\r\n                                <div key={i} style={country} onClick={(e) => this.props.handleCountryChange(data.country)} >\r\n                                <h4 >{data.country}</h4>\r\n                                <h4 style={{marginLeft:'15px'}}>{parseInt(data.cases).toLocaleString()}</h4>\r\n                                </div>\r\n                            )) }\r\n                        </div>\r\n                </div>\r\n            </div>\r\n        )        \r\n    }\r\n}\r\n\r\nconst country = {\r\n    display: 'flex',\r\n    \r\n}\r\n\r\nexport default Countries\r\n","C:\\Users\\Brandon\\Desktop\\covid\\src\\components\\ActiveCountries.js",[],"C:\\Users\\Brandon\\Desktop\\covid\\src\\components\\dailyChart.js",["72","73"],"C:\\Users\\Brandon\\Desktop\\covid\\src\\components\\YesterdayChart.js",["74"],"import React from 'react';  \r\nimport axios from 'axios'\r\nimport {Bar} from 'react-chartjs-2'\r\nimport IncreaseChart from './IncreaseChart';\r\n\r\n\r\nclass YesterdayChart extends React.Component {  \r\n    state = {\r\n        country: [],\r\n       yesterday:[]\r\n\r\n    }\r\n    componentDidMount(){\r\n        axios.get('https://disease.sh/v3/covid-19/continents?sort=cases')\r\n        .then(res => this.setState({country: res.data}))\r\n        axios.get('https://disease.sh/v3/covid-19/continents?yesterday=true&sort=cases')\r\n        .then(res => this.setState({yesterday: res.data}))\r\n   }\r\n    render(){  \r\n\r\n        \r\n       return(  \r\n        <div style={{display: \"flex\"}}>\r\n        <div style={{width: \"33%\"}}>\r\n        <Bar \r\n            options = {{\r\n                title: {\r\n                    display: true,\r\n                    text: \"Confirmed Cases Yesterday vs. Today\",\r\n                    fontColor: \"black\"\r\n                }\r\n            }}\r\n            data= {{\r\n            labels: this.state.country.map(({continent})=> continent),\r\n            datasets: [{\r\n                data: this.state.yesterday.map(({cases})=>cases),\r\n                label: \"Confirmed Yesterday\",\r\n                backgroundColor:\"#a00\",\r\n                borderColor: \"black\",\r\n            },{\r\n           \r\n                data: this.state.country.map(({cases})=>cases),\r\n                    label: \"Confirmed Today\",\r\n                    backgroundColor:\"#f00\",\r\n                    borderColor: \"green\",\r\n\r\n                }\r\n            ],\r\n\r\n        }}/> \r\n        </div>\r\n        <div style={{width: \"33%\"}}>\r\n        <Bar options = {{\r\n                title: {\r\n                    display: true,\r\n                    text: \"Recovered Yesterday vs. Today\",\r\n                    fontColor: \"black\"\r\n                }\r\n            }}\r\n            data= {{\r\n            labels: this.state.country.map(({continent})=> continent),\r\n            datasets: [{\r\n                data: this.state.yesterday.map(({deaths})=>deaths),\r\n                label: \"Deaths Yesterday\",\r\n                backgroundColor:\"#666\",\r\n                borderColor: \"white\",\r\n            },{\r\n           \r\n                data: this.state.country.map(({deaths})=>deaths),\r\n                    label: \"Deaths Today\",\r\n                    backgroundColor:\"#000\",\r\n                    borderColor: \"white\",\r\n\r\n                }\r\n            ],\r\n\r\n        }}/> \r\n        </div>\r\n        <div style={{width: \"33%\"}}>\r\n        <Bar \r\n        options = {{\r\n                title: {\r\n                    display: true,\r\n                    text: \"Deaths Yesterday vs. Today\",\r\n                    fontColor: \"black\"\r\n                }\r\n            }}\r\n            data= {{\r\n            labels: this.state.country.map(({continent})=> continent),\r\n            datasets: [{\r\n                data: this.state.yesterday.map(({recovered})=>recovered),\r\n                label: \"Recovered Yesterday\",\r\n                backgroundColor:\"lightGreen\",\r\n                borderColor: \"black\",\r\n            },{\r\n           \r\n                data: this.state.country.map(({recovered})=>recovered),\r\n                    label: \"Recovered Today\",\r\n                    backgroundColor:\"green\",\r\n                    borderColor: \"black\",\r\n\r\n                }\r\n            ],\r\n\r\n        }}/> \r\n        </div>\r\n        \r\n        \r\n    </div>\r\n    )  \r\n}  \r\n}  \r\n  \r\nexport default YesterdayChart;","C:\\Users\\Brandon\\Desktop\\covid\\src\\components\\IncreaseChart.js",["75"],"import React from 'react';  \r\nimport axios from 'axios'\r\nimport {Bar, Line} from 'react-chartjs-2'\r\n\r\nclass IncreaseChart extends React.Component {  \r\n    state = {\r\n        continentDiff: [],\r\n    }\r\n    componentDidMount() {\r\n        const todayReq = axios.get('https://disease.sh/v3/covid-19/continents?sort=cases');\r\n        const yesterdayReq = axios.get('https://disease.sh/v3/covid-19/continents?yesterday=1');\r\n        Promise.all([todayReq, yesterdayReq])\r\n            .then(([todayResults, yesterdayResults]) => {\r\n                const todayData = todayResults.data;\r\n                const yesterdayData = yesterdayResults.data;\r\n                const yesterdayContinentToData = {};\r\n                yesterdayData.forEach(data => {\r\n                    yesterdayContinentToData[data.continent] = data;\r\n                });\r\n                const diffData = todayData.map(todayContinent => {\r\n                    const continent = todayContinent.continent;\r\n                    const yesterdayContinent = yesterdayContinentToData[continent];\r\n                    console.log(continent, yesterdayContinent.continent);\r\n                    return {\r\n                        continent,\r\n                        cases: todayContinent.cases - yesterdayContinent.cases,\r\n                        deaths: todayContinent.deaths - yesterdayContinent.deaths,\r\n                        recovered: todayContinent.recovered - yesterdayContinent.recovered,\r\n                    };\r\n                });\r\n                console.log('diffData', diffData);\r\n                this.setState({continentDiff: diffData});\r\n            });\r\n    }\r\n\r\n    render(){  \r\n        const continents = this.state.continentDiff;\r\n       return(  \r\n        <div style ={{width: \"33%\"}}>\r\n        <Bar options={{\r\n            title : {\r\n                display: true,\r\n                text: \"Daily Changes\",\r\n                fontSize: 20,\r\n                fontColor: \"black\"\r\n                }\r\n            }} \r\n            data= {{\r\n            labels: continents.map(({continent})=> continent),\r\n            datasets: [{\r\n                data: continents.map(({cases})=>cases),\r\n                label: \"Confirmed\",\r\n                fill: false,\r\n                borderColor: \"#F00\",\r\n                backgroundColor: \"#F00\",\r\n            },{\r\n           \r\n                data: continents.map(({deaths})=>deaths),\r\n                    label: \"Deaths\",\r\n                    fill: false,\r\n                    borderColor: \"black\",\r\n                    backgroundColor: \"black\",\r\n\r\n                },{\r\n                data: continents.map(({recovered})=>recovered),\r\n                label: \"Recovered\",\r\n                fill: false,\r\n                borderColor: \"green\",\r\n                backgroundColor: \"green\",\r\n                }\r\n            ]\r\n            \r\n            }\r\n            \r\n            }/> \r\n\r\n    </div>\r\n    )  \r\n}  \r\n}  \r\n  \r\nexport default IncreaseChart;","C:\\Users\\Brandon\\Desktop\\covid\\src\\components\\DailyChart.js",["76","77"],"import React from 'react';  \r\nimport axios from 'axios'\r\nimport {Bar, Line} from 'react-chartjs-2'\r\n\r\n\r\nclass dailyChart extends React.Component {  \r\n    state = {\r\n        country: [],\r\n        keys: [1,2,3,4],\r\n        values: [3,4,5,]\r\n\r\n    }\r\n    componentDidMount(){\r\n        axios.get('https://disease.sh/v3/covid-19/continents?sort=cases')\r\n        .then(res => this.setState({country: res.data}))\r\n\r\n\r\n       \r\n   }\r\n    render(){  \r\n       return(  \r\n        <div style={{width: \"33%\"}}>\r\n       <h2 style={{marginBottom:'10px', textAlign: \"center\"}}></h2>\r\n        <Bar\r\n            options={{\r\n                title : {\r\n                    display: true,\r\n                    text: \"Total Confirmed Cases, Recovered and Deaths by Region\" ,\r\n                    fontSize: 20,\r\n                    fontColor: \"black\"\r\n                    }\r\n            }} \r\n            data= {{\r\n            labels: this.state.country.map(({continent})=> continent),\r\n            datasets: [{\r\n                data: this.state.country.map(({cases})=>cases),\r\n                label: \"Confirmed\",\r\n                fill: false,\r\n                borderColor: \"#F00\",\r\n                backgroundColor: \"#F00\"\r\n            },{\r\n           \r\n                data: this.state.country.map(({deaths})=>deaths),\r\n                    label: \"Death\",\r\n                    fill: false,\r\n                    borderColor: \"black\",\r\n                    backgroundColor: \"black\"\r\n\r\n                },{\r\n                data: this.state.country.map(({recovered})=>recovered),\r\n                label: \"Recovered\",\r\n                fill: false,\r\n                borderColor: \"green\",\r\n                backgroundColor: \"green\"\r\n                }\r\n            ],\r\n\r\n        }}/> \r\n\r\n    </div>\r\n    )  \r\n}  \r\n}  \r\n  \r\nexport default dailyChart;\r\n","C:\\Users\\Brandon\\Desktop\\covid\\src\\components\\Map.js",["78","79","80"],{"ruleId":"81","severity":1,"message":"82","line":6,"column":8,"nodeType":"83","messageId":"84","endLine":6,"endColumn":13},{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","replacedBy":"88"},{"ruleId":"81","severity":1,"message":"89","line":2,"column":8,"nodeType":"83","messageId":"84","endLine":2,"endColumn":13},{"ruleId":"81","severity":1,"message":"90","line":3,"column":10,"nodeType":"83","messageId":"84","endLine":3,"endColumn":25},{"ruleId":"81","severity":1,"message":"89","line":2,"column":8,"nodeType":"83","messageId":"84","endLine":2,"endColumn":13},{"ruleId":"81","severity":1,"message":"91","line":3,"column":14,"nodeType":"83","messageId":"84","endLine":3,"endColumn":18},{"ruleId":"92","severity":1,"message":"93","line":23,"column":8,"nodeType":"94","endLine":23,"endColumn":63},{"ruleId":"81","severity":1,"message":"95","line":4,"column":8,"nodeType":"83","messageId":"84","endLine":4,"endColumn":21},{"ruleId":"81","severity":1,"message":"91","line":3,"column":14,"nodeType":"83","messageId":"84","endLine":3,"endColumn":18},{"ruleId":"81","severity":1,"message":"91","line":3,"column":14,"nodeType":"83","messageId":"84","endLine":3,"endColumn":18},{"ruleId":"92","severity":1,"message":"93","line":23,"column":8,"nodeType":"94","endLine":23,"endColumn":63},{"ruleId":"81","severity":1,"message":"96","line":2,"column":35,"nodeType":"83","messageId":"84","endLine":2,"endColumn":41},{"ruleId":"81","severity":1,"message":"97","line":26,"column":11,"nodeType":"83","messageId":"84","endLine":26,"endColumn":15},{"ruleId":"98","severity":1,"message":"99","line":42,"column":14,"nodeType":"94","endLine":42,"endColumn":90},"no-unused-vars","'Graph' is defined but never used.","Identifier","unusedVar","no-native-reassign",["100"],"no-negated-in-lhs",["101"],"'axios' is defined but never used.","'findByLabelText' is defined but never used.","'Line' is defined but never used.","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement","'IncreaseChart' is defined but never used.","'Marker' is defined but never used.","'info' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-global-assign","no-unsafe-negation"]